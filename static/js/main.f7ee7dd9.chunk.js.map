{"version":3,"sources":["browser-history.js","const.js","store/selectors.js","components/private-route/private-route.jsx","store/action.js","components/private-screen/private-screen.jsx","assets/img/logo/logo.png","assets/img/logo/logo.webp","components/login-form/login-form.jsx","store/api-actions.js","components/login-screen/login-screen.jsx","components/app/app.jsx","store/reducer.js","index.js","store/middlewares/redirect.js"],"names":["browserHistory","createBrowserHistory","AppRoute","AuthorizationStatus","getIsAuthorized","state","authorizationStatus","getUser","user","getFormIsLoading","formIsLoading","PrivateRoute","props","render","path","exact","isAuthorized","useSelector","routeProps","to","ActionType","ActionCreator","payload","type","url","PrivateScreen","dispatch","useDispatch","className","onClick","e","preventDefault","localStorage","removeItem","LoginForm","emailRef","useRef","passwordRef","isLoading","onSubmit","userData","email","current","value","password","_getState","setTimeout","setItem","srcSet","LOGO_WEBP","src","LOGO_PNG","alt","width","htmlFor","ref","id","placeholder","required","tabIndex","href","disabled","LoginScreen","App","history","initialState","getItem","reducer","action","store","createStore","applyMiddleware","thunk","_store","next","push","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7ee7dd9.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nexport default browserHistory;\r\n","export const AppRoute = {\r\n  ROOT: '/',\r\n  LOGIN: '/login',\r\n};\r\n\r\nexport const AuthorizationStatus = {\r\n  AUTH: 'AUTH',\r\n  NO_AUTH: 'NO_AUTH',\r\n};\r\n","import {AuthorizationStatus} from '../const';\r\n\r\nexport const getIsAuthorized = (state) => state.authorizationStatus === AuthorizationStatus.AUTH;\r\nexport const getUser = (state) => state.user;\r\nexport const getFormIsLoading = (state) => state.formIsLoading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRoute} from '../../const';\r\nimport {getIsAuthorized} from '../../store/selectors';\r\n\r\n\r\nfunction PrivateRoute(props) {\r\n  const {\r\n    render,\r\n    path,\r\n    exact,\r\n  } = props;\r\n\r\n  const isAuthorized = useSelector(getIsAuthorized);\r\n\r\n  return (\r\n    <Route\r\n      path={path}\r\n      exact={exact}\r\n      render={(routeProps) => (\r\n        isAuthorized\r\n          ? render(routeProps)\r\n          : <Redirect to={AppRoute.LOGIN} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  exact: PropTypes.bool.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  render: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export const ActionType = {\r\n  REQUIRE_AUTHORIZATION: 'requireAuthorization',\r\n  REDIRECT_TO_ROUTE: 'redirectToRoute',\r\n  SET_USER: 'setUser',\r\n  SET_FORM_IS_LOADING: 'setFormIsLoading',\r\n};\r\n\r\nexport const ActionCreator = {\r\n  requireAuthorization: (payload) => ({\r\n    type: ActionType.REQUIRE_AUTHORIZATION,\r\n    payload,\r\n  }),\r\n  redirectToRoute: (url) => ({\r\n    type: ActionType.REDIRECT_TO_ROUTE,\r\n    payload: url,\r\n  }),\r\n  setUser: (user) => ({\r\n    type: ActionType.SET_USER,\r\n    payload: user,\r\n  }),\r\n  setFormIsLoading: (user) => ({\r\n    type: ActionType.SET_FORM_IS_LOADING,\r\n    payload: user,\r\n  }),\r\n};\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ActionCreator} from '../../store/action';\r\nimport {AppRoute, AuthorizationStatus} from '../../const';\r\nimport {getUser} from '../../store/selectors';\r\n\r\nfunction PrivateScreen() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(getUser);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(ActionCreator.redirectToRoute(AppRoute.LOGIN));\r\n    dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.NO_AUTH));\r\n    localStorage.removeItem('user');\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{user}</h1>\r\n      <button\r\n        className=\"button\"\r\n        onClick={handleClick}\r\n      >Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateScreen;\r\n","export default __webpack_public_path__ + \"static/media/logo.48fd12e0.png\";","export default __webpack_public_path__ + \"static/media/logo.97391cd0.webp\";","import React from 'react';\r\nimport {useRef} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login} from '../../store/api-actions';\r\nimport LOGO_PNG from '../../assets/img/logo/logo.png';\r\nimport LOGO_WEBP from '../../assets/img/logo/logo.webp';\r\nimport {getFormIsLoading} from '../../store/selectors';\r\n\r\nfunction LoginForm() {\r\n  const dispatch = useDispatch();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const isLoading = useSelector(getFormIsLoading);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"login-form\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className=\"login-form__logo-container\">\r\n        <picture>\r\n          <source srcSet={LOGO_WEBP} type=\"image/webp\"/>\r\n          <img\r\n            className=\"login-form__logo\"\r\n            src={LOGO_PNG}\r\n            alt=\"Logo\"\r\n            width=\"100\"\r\n          />\r\n        </picture>\r\n      </div>\r\n      <fieldset className=\"login-form__fieldset\">\r\n        <legend className=\"login-form__title\">Sign in</legend>\r\n        <ul className=\"login-form__list\">\r\n          <li className=\"login-form__item form-item\">\r\n            <div className=\"form-item__label-container\">\r\n              <label htmlFor=\"email\" className=\"form-item__label\">Email</label>\r\n            </div>\r\n            <input\r\n              ref={emailRef}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email\"\r\n              required\r\n              tabIndex=\"1\"\r\n            />\r\n          </li>\r\n          <li className=\"login-form__item form-item\">\r\n            <div className=\"form-item__label-container\">\r\n              <label htmlFor=\"password\" className=\"form-item__label\">Password</label>\r\n              <a\r\n                href=\"#forgot-password\"\r\n                className=\"form-item__link\"\r\n                tabIndex=\"2\">\r\n                Forgot password?\r\n              </a>\r\n            </div>\r\n            <input\r\n              ref={passwordRef}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password\"\r\n              required\r\n              tabIndex=\"1\"\r\n            />\r\n          </li>\r\n          <li className=\"login-form__item form-item\">\r\n            <button\r\n              disabled={isLoading}\r\n              className={`button button_full ${isLoading ? 'button_loading' : ''}`}\r\n              tabIndex=\"1\">\r\n              Sign in\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </fieldset>\r\n\r\n    </form>\r\n  );\r\n}\r\nexport default LoginForm;\r\n","import {ActionCreator} from './action';\r\nimport {AuthorizationStatus, AppRoute} from '../const';\r\n\r\nexport const login = (userData) => (dispatch, _getState) => {\r\n  dispatch(ActionCreator.setFormIsLoading(true));\r\n  setTimeout(() => {\r\n    localStorage.setItem('user', userData.email);\r\n    dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.AUTH));\r\n    dispatch(ActionCreator.setUser(userData.email));\r\n    dispatch(ActionCreator.redirectToRoute(AppRoute.ROOT));\r\n    dispatch(ActionCreator.setFormIsLoading(false));\r\n  }, 500);\r\n};\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport LoginForm from '../login-form/login-form';\r\nimport {getIsAuthorized} from '../../store/selectors';\r\nimport {AppRoute} from '../../const';\r\n\r\nfunction LoginScreen() {\r\n  const isAuthorized = useSelector(getIsAuthorized);\r\n\r\n  if (isAuthorized) {\r\n    return (\r\n      <Redirect to={AppRoute.ROOT}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-screen container\">\r\n      <section className=\"login-screen__form-container\">\r\n        <LoginForm/>\r\n      </section>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\nimport {\r\n  Router as BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport browserHistory from '../../browser-history';\r\nimport PrivateRoute from '../private-route/private-route';\r\nimport PrivateScreen from '../private-screen/private-screen';\r\nimport LoginScreen from '../login-screen/login-screen';\r\nimport {AppRoute} from '../../const';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter\r\n      history={browserHistory}\r\n    >\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={AppRoute.LOGIN}\r\n        >\r\n          <LoginScreen/>\r\n        </Route>\r\n        <PrivateRoute\r\n          exact\r\n          path={AppRoute.ROOT}\r\n          render={() => (\r\n            <PrivateScreen/>\r\n          )}>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {ActionType} from './action';\r\nimport {AuthorizationStatus} from '../const';\r\n\r\nconst initialState = {\r\n  user: localStorage.getItem('user') || '',\r\n  authorizationStatus: AuthorizationStatus.NO_AUTH,\r\n  formIsLoading: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.REQUIRE_AUTHORIZATION:\r\n      return {\r\n        ...state,\r\n        authorizationStatus: action.payload,\r\n      };\r\n    case ActionType.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case ActionType.SET_FORM_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        formIsLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport './assets/styles/main.scss';\r\nimport App from './components/app/app';\r\nimport {Provider} from 'react-redux';\r\nimport reducer from './store/reducer';\r\nimport thunk from 'redux-thunk';\r\nimport {redirect} from './store/middlewares/redirect';\r\nimport {ActionCreator} from './store/action';\r\nimport {AuthorizationStatus} from './const';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, redirect));\r\n\r\nif (localStorage.getItem('user')) {\r\n  store.dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.AUTH));\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import browserHistory from '../../browser-history';\r\nimport {ActionType} from '../action';\r\n\r\nexport const redirect = (_store) => (next) => (action) => {\r\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\r\n    browserHistory.push(action.payload);\r\n  }\r\n\r\n  return next(action);\r\n};\r\n"],"sourceRoot":""}